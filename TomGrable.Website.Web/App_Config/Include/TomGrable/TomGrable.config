<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:set="http://www.sitecore.net/xmlconfig/set/">
  
  <sitecore>
    
    <pipelines>

      <initialize>
        <processor type="Sitecore.Mvc.Pipelines.Loader.InitializeControllerFactory, Sitecore.Mvc">
          <!-- Replace the Sitecore InitializeControllerFactory processor with ours. -->
          <patch:attribute name="type">TomGrable.Website.Extensions.Pipelines.Initialize.ControllerFactoryInitializeProcessor,TomGrable.Website.Extensions</patch:attribute>
        </processor>
      </initialize>

      <getPlaceholderRenderings>
        <!-- This processor replaces the stock Sitecore processor with an implementation that takes dynamic placeholder keys into account. -->
        <processor patch:instead="processor[@type='Sitecore.Pipelines.GetPlaceholderRenderings.GetAllowedRenderings, Sitecore.Kernel']"
                   type="TomGrable.Website.Extensions.DynamicPlaceholders.GetAllowedRenderingsDynamic, TomGrable.Website.Extensions" />
      </getPlaceholderRenderings>

      <getChromeData>
        <!-- This processor runs after Sitecore's placeholder chrome data processor and makes the original placeholder name appear in Experience Editor. -->
        <processor patch:after="processor[@type='Sitecore.Pipelines.GetChromeData.GetPlaceholderChromeData, Sitecore.Kernel']"
                   type="TomGrable.Website.Extensions.DynamicPlaceholders.GetChromeData, TomGrable.Website.Extensions" />
      </getChromeData>

      <getRenderingDatasource>
        <!-- Add a processor to create datasource locations that don't already exist. -->
        <processor type="TomGrable.Website.Extensions.Pipelines.GetRenderingDatasource.DatasourceLocationTemplateProcessor, TomGrable.Website.Extensions"
                   patch:before="processor[@type='Sitecore.Pipelines.GetRenderingDatasource.GetDatasourceLocation, Sitecore.Kernel']" />
      </getRenderingDatasource>

      <httpRequestBegin>
        <!-- Add a processor to resolve resource URL within a resources folder. -->
        <processor type="TomGrable.Website.Extensions.Pipelines.HttpBeginRequest.ResourcePageItemResolver, TomGrable.Website.Extensions"
                   patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.ItemResolver, Sitecore.Kernel']" />
      </httpRequestBegin>

      <coveoPostItemProcessingPipeline>
        <!-- this procesor replaces coveo basic html processor to include datasource fields-->
        <processor type="TomGrable.Website.Extensions.Pipelines.CoveoPostItemProcessing.DataSourceHtmlSourceContentInBodyProcessor, TomGrable.Website.Extensions">
          <IncludeFieldNames>false</IncludeFieldNames>
          <IncludeTextFieldsOnly>false</IncludeTextFieldsOnly>
          <TemplatesToInclude>Base Page,Content Page,Resource Page,Account Page,Home Page,News Page,Callout,FAQ,Base Layer,Callouts Grid Layer,Image Layer,Image Layer With Orb,Latest News Layer</TemplatesToInclude>
          <FieldsToInclude>Name,DisplayName,Heading,Body,Description,Question,Answer</FieldsToInclude>
        </processor>
      </coveoPostItemProcessingPipeline>

    </pipelines>
    
  </sitecore>
  
</configuration>
